
<script>
/* eslint-disable */
Highcharts.SparkLine = function (a, b, c) {
    var hasRenderToArg = typeof a === 'string' || a.nodeName,
        options = arguments[hasRenderToArg ? 1 : 0],
        defaultOptions = {
            chart: {
                renderTo: (options.chart && options.chart.renderTo) || this,
                backgroundColor: null,
                borderWidth: 0,
                type: 'area',
                margin: [2, 0, 2, 0],
                width: 120,
                height: 20,
                style: {
                    overflow: 'visible'
                },
                skipClone: true
            },
            title: {
                text: ''
            },
            credits: {
                enabled: false
            },
            xAxis: {
                labels: {
                    enabled: false
                },
                title: {
                    text: null
                },
                startOnTick: false,
                endOnTick: false,
                tickPositions: []
            },
            yAxis: {
                endOnTick: false,
                startOnTick: false,
                labels: {
                    enabled: false
                },
                title: {
                    text: null
                },
                tickPositions: [0]
            },
            legend: {
                enabled: false
            },
            tooltip: {
                enabled: false
            },
            plotOptions: {
                series: {
                    animation: false,
                    color: Highcharts.getOptions().colors[1],
                    shadow: false,
                    states: {
                        hover: {
                            lineWidth: 1
                        }
                    },
                    marker: {
                        radius: 1,
                        states: {
                            hover: {
                                radius: 2
                            }
                        }
                    },
                    fillOpacity: 0.25
                },
                column: {
                    negativeColor: '#910000',
                    borderColor: 'silver'
                }
            }
        };

    options = Highcharts.merge(defaultOptions, options);

    return hasRenderToArg ?
        new Highcharts.Chart(a, options, c) :
        new Highcharts.Chart(options, b);
};
</script>
<script>
	/* eslint-disable */
	function updateDiff() {
		var checked = [],
			browsers = $('#results').data('browsers').split(',');

		$('#results').find('tr').each(function () {
			var range = [], diff, className;
		
			$(this).find('td.value').each(function (i, td) {
				if (td.innerHTML !== '') {
					var diff = +td.innerHTML;

					if (!isNaN(diff)) {
						range.push(diff);
					}
				}
			});


			if (range.length < 2) {
				diff = '-';
			} else {
				diff = Math.abs(Math.max.apply(0, range) - Math.min.apply(0, range));

				if (diff === 0) {
					className = 'diff';
				} else {
					className = 'diff different';
					diff = Math.round(diff * 100) / 100;
				}
			}
			$(this).find('td.diff')
				.attr({
					'class': className
				})
				.html(diff);
		});
	}
	$(function () {
		var $compareDiv = $('#compare-browsers'),
			$inputs = $compareDiv.find('input');

		updateDiff();
		$inputs.each(function () {
			$(this).bind('change', function () {
				updateDiff();
			});
		})
	});
</script>

<style type="text/css">
	* {
		font-family: Arial, sans-serif;
	}
	body {
		font-size: 0.8em;
	}
	.top-bar {
		color: white;
		font-family: Arial, sans-serif; 
		font-size: 0.8em; 
		padding: 0.5em; 
		height: 3.5em;
		background: #57544A;
		background: -webkit-linear-gradient(top, #57544A, #37342A); 
		background: -moz-linear-gradient(top, #57544A, #37342A);
		box-shadow: 0px 0px 8px #888;
	}

	
	.top-bar a {
		color: white;
		text-decoration: none;
		font-weight: bold;
	}

	table {
		border-collapse: collapse;
	}
	th {
		text-align: left;
		background: #EEF;
	}
	td, th {
		border: 1px solid silver;
		padding: 3px;
	}
	.path {
		border-right: 2px solid black;
	}
	.diff {
		background: #EEF;
		border-left: 2px solid black;
		border-right: 2px solid black;
	}
	.different {
		background: red;
		color: white;
	}
</style>



<div class="top-bar">
	
	<h2 style="margin: 0">Comparison report</h2> 
</div>

<div style="margin: 10px">
	
	<div>
		<h3>Test results</h3>
		<table id="results" data-browsers="{{browsers}}">
			
			<thead>
				<tr>
					<th class='path'></th>
					{{#each browsers}}
					<th>{{this}}</th>
					{{/each}}
					<th class='sparkline'>Variance</th>
					<th class='diff'>Diff</th>
					<th class='comment'>Comment</th>
				</tr>
			</thead>

			<tbody>
			{{#each compare}}
			<tr>
				<th class='path'>
					{{@index}}.
					<a href="compare-view?path={{@key}}">{{@key}}</a>
				</th>
				{{#each this.browsers}}
				<td class="value" title="{{@key}}: {{this}}">{{this}}</td>
				{{/each}}

				<td id="sparkline-{{@index}}" class="sparkline"></td>
				{{#if this.hasSparkline}}
				<script>
					Highcharts.SparkLine('sparkline-{{@index}}', {
						series: [{
							data: [{{this.sparkline}}]
						}]
					});
					</script>
				{{/if}}

				<td class="diff"></td>
				<td class="comment">
				{{#if this.comment}}
					<i class="fa fa-{{this.comment.symbol}}"></i> {{this.comment.title}}
				{{/if}}
				</td>

			</tr>
			{{/each}}
			</tbody>
		</table>
	</div>
</div>
