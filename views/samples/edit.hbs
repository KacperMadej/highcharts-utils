<style type="text/css">
	body {
		margin: 0;
	}
	h4 {
		border-bottom: 1px solid silver;
		margin: 0;
		padding: 0.25em 5px;
		font-family: Arial, Verdana;
		font-size: 12px;
		color: white;
		background: #34343e;
	}
	h4 a {
		color: white;
	}
	.CodeMirror {
		background: #efefef;
		height: calc(100vh - 40px);
		line-height: 1.2em;
	}

	.header-bar {
		background-color: #47475C;
		color: white;
	}

	.header-bar button {
		background-color: #47475C;
		color: white;
		border: none;
		border-top: 3px solid #47475C;
		cursor: pointer;
		display: inline-block;
		padding: 7px 20px;
		margin: 0;
	}
	.header-bar button:hover {
		background-color: #34343e;
		border-top: 3px solid #40818b;
	}

	.tabs {
		width: 100%;
		display: flex;
		flex-direction: column;
	}

	.tab-buttons {
		display: flex;
		border-bottom: 2px solid #ccc;
	}

	.tab-button {
		padding: 10px 20px;
		cursor: pointer;
		background-color: #f1f1f1;
		border: none;
		outline: none;
	}

	.tab-button:hover {
		background-color: #ddd;
	}

	.tab-button.active {
		background-color: #fff;
		border-bottom: 2px solid #000;
	}

	.tab-content {
		display: none;
	}

	.tab-content.active {
		display: block;
	}

</style>

<script>

const run = () => {
	const files = {};
	editors.forEach(editor => {
		files[editor.getTextArea().id] = editor.getValue();
	});

	const data = { files };

	const response = await fetch('/samples/edit', {
    	method: 'POST',
    	headers: {
      		'Content-Type': 'application/json'
    	},
    	body: JSON.stringify(data)
  	});
}

const editors = [];
document.addEventListener("DOMContentLoaded", () => {
  	const tabButtons = document.querySelectorAll(".tab-button");
  	const tabContents = document.querySelectorAll(".tab-content");

  	tabButtons.forEach((button) => {
    	button.addEventListener("click", () => {
      		const targetTab = button.getAttribute("data-tab");

      		tabButtons.forEach((btn) => btn.classList.remove("active"));
      		tabContents.forEach((content) => content.classList.remove("active"));

      		button.classList.add("active");
      		document.getElementById(targetTab)?.classList.add("active");
			editors.forEach(editor => editor.refresh());
    	});
  	});

  	// Activate the first tab by default
  	if (tabButtons.length > 0 && tabContents.length > 0) {
    	tabButtons[0].classList.add("active");
    	tabContents[0].classList.add("active");
		editors[0].refresh();
  	}

	// Activate the run button
	document.getElementById("run-button").addEventListener("click", run);
});
</script>

<div class="header-bar">
	<button id="run-button">
		<i class="fa fa-play"></i> Run
	</button>
</div>

<div class="tabs">
	<div class="tab-buttons">
    {{#each files}}
	  	<button class="tab-button" data-tab="tab-{{name}}">{{name}}</button>
    {{/each}}
	</div>


	{{#each files}}
	<div class="tab-content" id="tab-{{name}}">
		<!--
		<h4>
			{{name}}
			<a href="vscode://file/{{path}}" target="_blank" title="Edit in VSCode"
					class="edit">
				<i class="fa fa-edit"></i>
			</a>
		</h4>
		-->
		<textarea class="file-content" id="{{name}}">{{{content}}}</textarea>
		<script>
		(() => {
			const textarea = document.getElementById('{{name}}');
			const editor = CodeMirror.fromTextArea(textarea, {
				mode: '{{editorMode}}',
				indentUnit: '    ',
				lineNumbers: true,
				readOnly: false
			});

			// Add a change event listener
			editor.on('change', () => {
				// Update the textarea value with the editor content
				textarea.value = editor.getValue();
			});

			editors.push(editor);
		})();
		</script>

	</div>
	{{/each}}
</div>
